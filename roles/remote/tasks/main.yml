- name: Check for vars
  ansible.builtin.assert:
    that:
      - clone_git_repo is defined
  tags: assertion

- name: Show some facts
  ansible.builtin.debug:
    var: ansible_facts['kernel_version']
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['distribution_major_version'] | int >= 12
  tags: facts

- name: Register a variable
  ansible.builtin.command: cat {{ home_directory }}/.fault-token
  register: fault_token
  tags: fault

- name: Print fault token
  ansible.builtin.debug:
    var: fault_token.stdout.split('-')[0].split('.')[1]
  when: fault_token.stdout.find("hvs") != -1
  tags: fault

- name: Whether or not the repository has already been cloned locally
  ansible.builtin.stat:
    dest: "{{ home_directory }}/{{ parent_directory }}"
  register: repo_exists_result
  tags: git_clone

- name: Clone Github Repo
  ansible.builtin.git:
    repo: https://github.com/Safarveisi/KubeMLOps.git
    dest: "{{ home_directory }}/{{ parent_directory }}"
    single_branch: yes
    version: master
  register: clone_result
  when: 
    - not repo_exists_result.stat.isdir is defined
    - clone_git_repo
  tags: git_clone

- name: Show clone result
  ansible.builtin.debug:
    var: clone_result
  when: clone_result.changed
  tags: git_clone

- name: Check if the file to copy already exists
  ansible.builtin.stat:
    path: "{{ home_directory }}/ansible_file.txt"
  register: file_stat
  tags: copy_file

- name: Copy a file into the remote server
  ansible.builtin.template: 
    src: ansible_file.txt
    dest: "{{ home_directory }}"
    owner: ssafarveisi
    mode: u+rw
  register: copy_result
  ignore_errors: true
  when: not file_stat.stat.exists 
  tags: copy_file

- name: Copy result
  ansible.builtin.debug:
    var: copy_result
  when: copy_result.changed
  tags: copy_file

- name: Find all fraud directories in the remote server
  ansible.builtin.find:
    paths: "{{ home_directory }}"
    file_type: directory
    patterns: '^fraud.*'
    use_regex: yes
  register: fraud_directories
  tags: search

- name: Print the file name matched in the search
  ansible.builtin.debug: 
    msg: "{{ fraud_directories.files | map(attribute='path') | list  | map('split', '/') | map('last') | list }}"
  tags: search

- name: List all files in a directory
  ansible.builtin.command: 
    cmd: ls {{ home_directory}}/ansible_test_directory/
  register: listed_files
  tags: remove_file

- name: Remove files 2 and 3
  ansible.builtin.file:
    path: "{{ home_directory }}/ansible_test_directory/{{ item }}"
    state: absent
  loop: "{{ listed_files.stdout_lines }}"
  when: 'item is regex("^file_to_remove[23].txt$")'
  notify: Create new files
  tags: remove_file

- name: Change a line in a file
  ansible.builtin.lineinfile:
    path: "{{ home_directory }}/ansible_test_directory/file_to_remove1.txt"
    regexp: '^LPK'
    line: 'LPK = 10'
  tags: insert

- name: Create new files
  ansible.builtin.copy:
    dest: "{{ home_directory }}/ansible_test_directory/new_file2.txt"
    content: "{{ message }}"
    mode: "0664"
  when: message is defined
  tags: create_file